{
	"info": {
		"_postman_id": "26367228-e99c-b787-b7fd-2c92f4db315a",
		"name": "Mi Recipes API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Units",
			"description": "",
			"item": [
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/units/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"abbrev\": \"UNIT28\",\n\"name\": \"Unit Name 28\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"description": "",
					"item": [
						{
							"name": "/api/units/Valid id but not existent id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT12\",\r\n\"name\": \"Unit Name 12 UPDATED 3\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/units/5a319f95f41155387c6835f2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"units",
										"5a319f95f41155387c6835f2"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/Valid id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT12\",\r\n\"name\": \"Unit Name 12 UPDATED 5\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/5a319f98f45778387c6835f8",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"5a319f98f45778387c6835f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT03\",\r\n\"name\": \"Unit Name 3 UPDATED\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/units/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"units",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/Invalid Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT03\",\r\n\"name\": \"Unit Name 3 UPDATED\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/units/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"units",
										"111"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"description": "",
					"item": [
						{
							"name": "/api/units/Valid id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/5aae775587a1d70918bf4011",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"5aae775587a1d70918bf4011"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/Non-Existent Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/5aae4ff3505f4a1c1c8aa83a",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"5aae4ff3505f4a1c1c8aa83a"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/InValid Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/4ssse",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"4ssse"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/{Filter Condition}",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/{ \"$or\" : [ { \"abbrev\": \"UNIT07\" }, { \"abbrev\": \"UNIT12\" } ] }",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"{ \"$or\" : [ { \"abbrev\": \"UNIT07\" }, { \"abbrev\": \"UNIT12\" } ] }"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/units/ {No filter}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/?pub=default",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									],
									"query": [
										{
											"key": "pub",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/ Invalid method",
							"request": {
								"method": "UNLINK",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/?",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/?",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/ {Filter condition}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/?filter={ \"$or\" : [ { \"abbrev\": \"cm3\" }, { \"abbrev\": \"g\" } ] }",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									],
									"query": [
										{
											"key": "filter",
											"value": "{ \"$or\" : [ { \"abbrev\": \"cm3\" }, { \"abbrev\": \"g\" } ] }"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/ {Filter condition}?And pagination",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/{ \"$or\" : [ { \"abbrev\": \"cm3\" }, { \"abbrev\": \"g\" } ] }?sort=name",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"{ \"$or\" : [ { \"abbrev\": \"cm3\" }, { \"abbrev\": \"g\" } ] }"
									],
									"query": [
										{
											"key": "sort",
											"value": "name"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/ {pagination and Count}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/units/?top=3&count=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										""
									],
									"query": [
										{
											"key": "top",
											"value": "3"
										},
										{
											"key": "count",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/Valid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/5af1fd7a52bf1d8be0edd403",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"5af1fd7a52bf1d8be0edd403"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/units/Invalid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/1111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"1111"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										""
									]
								},
								"description": "Test to hit the root API"
							},
							"response": []
						},
						{
							"name": "/api/invalidentity",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/invalid",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"invalid"
									]
								},
								"description": "Test to hit an invalid entity"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Levels",
			"description": "",
			"item": [
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/levels/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiMENuN3JwN3B2OU5FOWsyS05aMmg1ZGJiZ1VkNzB5ZnNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZWxtb3NvZnR3YXJlLmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTQwNDE1ODY3LCJleHAiOjE1NDA1MDIyNjcsImF6cCI6IjBDbjdycDdwdjlORTlrMktOWjJoNWRiYmdVZDcweWZzIiwic2NvcGUiOiJyZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.2yKYLWPdmtq5sB5pR7pBiDuuWtdtb38JOVx7b9rSD8Nz8GKtTMVnlYmFx9NDcMNCoPRXyHcL4T5zynMJtGm4CPo_dx2BfR6wnuw3OODZod9WagXusCsAZEyHNMCSxwrsf8CxlrgnYhb2eyWbQ_RxTPhNF09qinc44s-gSQixeTyLTDC7dcOZqJK0bL5fpMLX3W1qajHwYkcN6K5AGutsnDPx94IurDTMTDwbWG0w6AWWbZ7lKQY4pk99poZCO7QMxmHOTmaQp1E4OkiRf4-Cn7YIPRpbj39ktR3mTLoe8q6WyIMFwtXyhnuGME3-pes8J7Xk3CInEaWukE06OzPh7A",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"Level TEST02\",\n\"description\": \"This is a test Level\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"description": "",
					"item": [
						{
							"name": "/api/levels/Valid id but not existent id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"Level 02\",\n\"description\": \"This is Level 02 UPDATED\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/5a319f95f41151387c6835f2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"5a319f95f41151387c6835f2"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/Valid id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiMENuN3JwN3B2OU5FOWsyS05aMmg1ZGJiZ1VkNzB5ZnNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZWxtb3NvZnR3YXJlLmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTQwNDE1ODY3LCJleHAiOjE1NDA1MDIyNjcsImF6cCI6IjBDbjdycDdwdjlORTlrMktOWjJoNWRiYmdVZDcweWZzIiwic2NvcGUiOiJyZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.2yKYLWPdmtq5sB5pR7pBiDuuWtdtb38JOVx7b9rSD8Nz8GKtTMVnlYmFx9NDcMNCoPRXyHcL4T5zynMJtGm4CPo_dx2BfR6wnuw3OODZod9WagXusCsAZEyHNMCSxwrsf8CxlrgnYhb2eyWbQ_RxTPhNF09qinc44s-gSQixeTyLTDC7dcOZqJK0bL5fpMLX3W1qajHwYkcN6K5AGutsnDPx94IurDTMTDwbWG0w6AWWbZ7lKQY4pk99poZCO7QMxmHOTmaQp1E4OkiRf4-Cn7YIPRpbj39ktR3mTLoe8q6WyIMFwtXyhnuGME3-pes8J7Xk3CInEaWukE06OzPh7A"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"Level TEST02 UPD\",\n\"description\": \"This is a test Level\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/5af1fa1252bf1d8be0edd3ff",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"5af1fa1252bf1d8be0edd3ff"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT03\",\r\n\"name\": \"Unit Name 3 UPDATED\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/Invalid Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"abbrev\": \"UNIT03\",\r\n\"name\": \"Unit Name 3 UPDATED\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/1111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"1111"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"description": "",
					"item": [
						{
							"name": "/api/levels/Valid id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiMENuN3JwN3B2OU5FOWsyS05aMmg1ZGJiZ1VkNzB5ZnNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZWxtb3NvZnR3YXJlLmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTQwNDE1ODY3LCJleHAiOjE1NDA1MDIyNjcsImF6cCI6IjBDbjdycDdwdjlORTlrMktOWjJoNWRiYmdVZDcweWZzIiwic2NvcGUiOiJyZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.2yKYLWPdmtq5sB5pR7pBiDuuWtdtb38JOVx7b9rSD8Nz8GKtTMVnlYmFx9NDcMNCoPRXyHcL4T5zynMJtGm4CPo_dx2BfR6wnuw3OODZod9WagXusCsAZEyHNMCSxwrsf8CxlrgnYhb2eyWbQ_RxTPhNF09qinc44s-gSQixeTyLTDC7dcOZqJK0bL5fpMLX3W1qajHwYkcN6K5AGutsnDPx94IurDTMTDwbWG0w6AWWbZ7lKQY4pk99poZCO7QMxmHOTmaQp1E4OkiRf4-Cn7YIPRpbj39ktR3mTLoe8q6WyIMFwtXyhnuGME3-pes8J7Xk3CInEaWukE06OzPh7A"
									}
								],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/levels/5af1fa1252bf1d8be0edd3ff",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"5af1fa1252bf1d8be0edd3ff"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/non-existent",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/units/5aae4ff3505f4a1c1c8aa83f",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"units",
										"5aae4ff3505f4a1c1c8aa83f"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/levels/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/levels/ {No filter}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/ {Filter condition}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/?filter={ \"$or\" : [ { \"name\": \"Básico\" }, { \"name\": \"Avanzado\" } ] }",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									],
									"query": [
										{
											"key": "filter",
											"value": "{ \"$or\" : [ { \"name\": \"Básico\" }, { \"name\": \"Avanzado\" } ] }"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/ {pagination}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/levels/?top=3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										""
									],
									"query": [
										{
											"key": "top",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/Valid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/levels/5af1fa1252bf1d8be0edd3ff",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"5af1fa1252bf1d8be0edd3ff"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/levels/Invalid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/levels/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"levels",
										"111"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "MealTypes",
			"description": "",
			"item": [
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/mealtypes/ {No filter}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/mealtypes/ {Filter condition}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/?filter={ \"$or\" : [ { \"name\": \"Desayuno\" }, { \"name\": \"Aperitivo\" } ] }",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										""
									],
									"query": [
										{
											"key": "filter",
											"value": "{ \"$or\" : [ { \"name\": \"Desayuno\" }, { \"name\": \"Aperitivo\" } ] }"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/mealtypes/ {pagination}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
								},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/?top=3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										""
									],
									"query": [
										{
											"key": "top",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/mealtypes/Valid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/5af1f92f52bf1d8be0edd3fd",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										"5af1f92f52bf1d8be0edd3fd"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/mealtypes/Invalid id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										"111"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/mealtypes/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"Test dates 3\",\n\"description\": \"This is TEST  DATES 3\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"description": "",
					"item": [
						{
							"name": "/api/mealtypes/Valid Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"Test dates 3\",\n\"description\": \"This is TEST  DATES 3 UPDATED\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/mealtypes/5aee5bacec16886ac4d4dd2a",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"mealtypes",
										"5aee5bacec16886ac4d4dd2a"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Ingredients",
			"description": "",
			"item": [
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/ingredients/",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/ingredients/?pop=false",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/?pop=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/ingredients/:id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/5af2000c52bf1d8be0edd409",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										"5af2000c52bf1d8be0edd409"
									]
								},
								"description": "Return an ingredient ginding by id"
							},
							"response": []
						},
						{
							"name": "/api/ingredients/:id {invalid id format}",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/1111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										"1111"
									]
								},
								"description": "Return an ingredient ginding by id"
							},
							"response": []
						},
						{
							"name": "/api/ingredients/:id {non-existent id}",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/5a35822e0a66be24b8d56faa",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										"5a35822e0a66be24b8d56faa"
									]
								},
								"description": "Return an ingredient ginding by id"
							},
							"response": []
						},
						{
							"name": "/api/ingredients/ Search by name",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/?pop=true&filter={\"name\":{\"$regex\" : \"har\", \"$options\" : \"i\"}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "filter",
											"value": "{\"name\":{\"$regex\" : \"har\", \"$options\" : \"i\"}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/ingredients/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"INGR02\",\r\n\"compatibleUnits\":[\"5a1b55d8ee211d57141ec4fb\"]\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/ingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"ingredients",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/ingredients/ non existent comp unit",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"INGR02\",\r\n\"compatibleUnits\":[\"5ffb55d8ee211d57141ec4fb\"]\r\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/ingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"ingredients",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/ingredients/ invalid compatible unit ids",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"INGR02\",\r\n\"compatibleUnits\":[\"aaa\",\"1111\"]\r\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/ingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"ingredients",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Invalid Requests",
			"description": "",
			"item": [
				{
					"name": "/api/non-existent-model/ {non existent model}",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:3000/api/non-existent-model/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"non-existent-model",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/units/ {non supported method}",
					"request": {
						"method": "LOCK",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:3000/api/units/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"units",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipes",
			"description": "",
			"item": [
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/recipes/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"My 4th Recipe\",\r\n\t\"description\": \"This is my recipe description\",\r\n\t\"estimatedTime\": \"30\",\r\n\t\"level\": \"5ac6ebf32303413084121f3d\",\r\n\t\"mealType\": \"5ac8a90e97c9bf375c2fff3e\",\r\n\t\"ingredients\": [\r\n\t\t{\r\n\t\t\t\"ingredient\": \"5ac27c982b7d8b42887ab37b\",\r\n\t\t\t\"amount\": \"3\",\r\n\t\t\t\"unit\": \"5a1b55d8ee211d57141ec4fb\"\r\n\t\t}\r\n\t\t],\r\n\t\"directions\" : [\"4th Primero hacer esto.\", \"4th Luego hacer lo otro.\", \"4th Y al final lastrarlo.\"]\r\n} "
								},
								"url": {
									"raw": "http://localhost:3000/api/recipes/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ {Test to create on the fly Mealtype",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"TEST 202\",\r\n\t\"description\": \"This is my recipe test\",\r\n\t\"estimatedTime\": \"30\",\r\n\t\"level\": \"5aae9bf7d096af48709a21dd\",\r\n\t\"mealType\": {\"name\": \"On The fly 202\", \"description\": \"On the fly meal type test\"},\r\n\t\"ingredients\": [\r\n\t\t{\r\n\t\t\t\"ingredient\": \"5ac27c982b7d8b42887ab37b\",\r\n\t\t\t\"amount\": \"202\",\r\n\t\t\t\"unit\": \"5a1b572526fa5818f8a82536\"\r\n\t\t}\r\n\t\t],\r\n\t\"directions\" : [\"Primero hacer esto.\", \"Luego hacer lo otro.\", \"Y al final lastrarlo.\"]\r\n} "
								},
								"url": {
									"raw": "http://localhost:3000/api/recipes/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/recipes/",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ By Id",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/5b1d8d502410d134e46aa1e6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										"5b1d8d502410d134e46aa1e6"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ By Id Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJodHRwczovL2VsbW9zb2Z0d2FyZS5jb20vYXBwX21ldGFkYXRhIjp7InJvbGUiOiJhZG1pbiJ9LCJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDgyNzc2MTQ3MTkwODIyODA0MDgiLCJhdWQiOlsiaHR0cHM6Ly9lbG1vc29mdHdhcmUuYXV0aDAuY29tL2FwaS92Mi8iLCJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNTQzNTgyMTIyLCJleHAiOjE1NDM1ODkzMjIsImF6cCI6InoycFg4UTdibjFjZUxpMDNPcEcxMUFDZlEyZzB4WjJvIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCB1cGRhdGU6Y3VycmVudF91c2VyX21ldGFkYXRhIn0.mUCD122oEwJpBmUFUkolCp1e43aDw_OxMQIKgw3SXyMRkfhUPfaFtGhrHv_-oYxUXoRl9CDcqhXjAWl4nqKzbVUc1cv9eJrQ232Mfv6qxqkOLugO0SRGnq1Dw44OlKX9YVGQ8LrCyagb5HJFARDMwEBtCFe02mBfDBsNtn8L4SSnckcwLo45Ham538OGbYW2lz37-1JjM27SHPi_eqHBRten2oZsfMs-9UiZBUTASn2m22_nKtbPkUjW9t_ENIlzuw32Zhrxc3xBcmQ7ggeSTrXzthU9XIbcNlEnmayA9xx-22TO0ArcMvh-TIwzgEoituA1Quki7heTEVpll9lAZw"
									}
								],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/5c012f05ec4f389e748696fb",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										"5c012f05ec4f389e748696fb"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Latest",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=true&top=3&sort=-lastUpdateOn -createdOn&pop=false&fields=name description ingredients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "top",
											"value": "3"
										},
										{
											"key": "sort",
											"value": "-lastUpdateOn -createdOn"
										},
										{
											"key": "pop",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "name description ingredients"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Search",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=false&fields=name description directions publishedOn&filter={\"$text\":{\"$search\":\"\\\"receta\\\"\"}}&pub=all",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "name description directions publishedOn"
										},
										{
											"key": "filter",
											"value": "{\"$text\":{\"$search\":\"\\\"receta\\\"\"}}"
										},
										{
											"key": "pub",
											"value": "all"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Search Ingredient",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=true&fields=-level -mealType -directions&filter={\"ingredients.ingredient._id\": \"5af2005152bf1d8be0edd40b\"}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "fields",
											"value": "-level -mealType -directions"
										},
										{
											"key": "filter",
											"value": "{\"ingredients.ingredient._id\": \"5af2005152bf1d8be0edd40b\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Search Mealtype",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=true&fields=-ingredients -directions&filter={ \"mealType\": { \"$in\": [\"5af1f92f52bf1d8be0edd3fd\", \"5af1f91b52bf1d8be0edd3fc\"] }}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "fields",
											"value": "-ingredients -directions"
										},
										{
											"key": "filter",
											"value": "{ \"mealType\": { \"$in\": [\"5af1f92f52bf1d8be0edd3fd\", \"5af1f91b52bf1d8be0edd3fc\"] }}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Search  by User",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=true&fields=-ingredients -directions&filter={ \"$or\": [ { \"lastUpdateBy\": \"auth0|5bad1851654f067ba2541111\" }, { \"createdBy\":  \"auth0|5bad1851654f067ba2541111\"} ] }",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "fields",
											"value": "-ingredients -directions"
										},
										{
											"key": "filter",
											"value": "{ \"$or\": [ { \"lastUpdateBy\": \"auth0|5bad1851654f067ba2541111\" }, { \"createdBy\":  \"auth0|5bad1851654f067ba2541111\"} ] }"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/ Search  by User and MealType",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipes/?pop=true&fields=-ingredients -directions&filter={\n\t\"$and\": [{\n\t\t\"mealType\": {\n\t\t\t\"$in\": [\"5af1f92f52bf1d8be0edd3fd\", \"5af1f91b52bf1d8be0edd3fc\"]\n\t\t},\n\t\t\"$or\": [{\n\t\t\t\"lastUpdateBy\": \"auth0|5bad1851654f067ba2541111\"\n\t\t}, {\n\t\t\t\"createdBy\": \"auth0|5bad1851654f067ba2541111\"\n\t\t}]\n\t}]\n}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "fields",
											"value": "-ingredients -directions"
										},
										{
											"key": "filter",
											"value": "{\n\t\"$and\": [{\n\t\t\"mealType\": {\n\t\t\t\"$in\": [\"5af1f92f52bf1d8be0edd3fd\", \"5af1f91b52bf1d8be0edd3fc\"]\n\t\t},\n\t\t\"$or\": [{\n\t\t\t\"lastUpdateBy\": \"auth0|5bad1851654f067ba2541111\"\n\t\t}, {\n\t\t\t\"createdBy\": \"auth0|5bad1851654f067ba2541111\"\n\t\t}]\n\t}]\n}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"description": "",
					"item": [
						{
							"name": "/api/recipes/{Valid id}",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"My 2nd Recipe\",\r\n\t\"description\": \"This is my recipe description UPD\",\r\n\t\"estimatedTime\": \"30\",\r\n\t\"level\": \"5aae9bf7d096af48709a21dd\",\r\n\t\"mealType\": \"5ac8a94097c9bf375c2fff40\",\r\n\t\"ingredients\": [\r\n\t\t{\r\n\t\t\t\"ingredient\": \"5acc343e71d8618538bfa242\",\r\n\t\t\t\"amount\": \"3\",\r\n\t\t\t\"unit\": \"5a43f45f9ff96867941dfde5\"\r\n\t\t}\r\n\t\t],\r\n\t\"directions\" : [\"2nd Primero hacer esto.\", \"2nd Luego hacer lo otro.\", \"2nd Y al final lastrarlo.\"]\r\n} \r\n"
								},
								"url": {
									"raw": "http://localhost:3000/api/recipes/5af1f1c761dcee739c575d92",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										"5af1f1c761dcee739c575d92"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipes/{Valid id} Adding Ingredient",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"TEST 201\",\r\n\t\"description\": \"This is my recipe test UPDATED\",\r\n\t\"estimatedTime\": \"30\",\r\n\t\"level\": \"5aae9bf7d096af48709a21dd\",\r\n\t\"mealType\": \"5ae44f01e8c1e217f88b4b09\",\r\n\t\"ingredients\": [\r\n\t\t\"5ae44f03e8c1e217f88b4b0a\",\r\n\t\t{\r\n\t\t\t\"ingredient\": \"5aae9717cadcc74b1455a4da\",\r\n\t\t\t\"amount\": \"43\",\r\n\t\t\t\"unit\": \"5a1b572526fa5818f8a82536\"\r\n\t\t}\r\n\t\t],\r\n\t\"directions\" : [\"Primero hacer esto.\", \"Luego hacer lo otro.\", \"Y al final lastrarlo.\"]\r\n} "
								},
								"url": {
									"raw": "http://localhost:3000/api/recipes/5ae44ef7e8c1e217f88b4b08",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipes",
										"5ae44ef7e8c1e217f88b4b08"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "RecipeIngredients",
			"description": "",
			"item": [
				{
					"name": "POST",
					"description": "",
					"item": [
						{
							"name": "/api/recipeingredients/",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"recipe\": \"5ad95d7fd55d674cf0a91576\",\r\n\t\"ingredient\": \"5ac27c982b7d8b42887ab37b\",\r\n\t\"amount\": \"1\",\r\n\t\"unit\": \"5a1b572526fa5818f8a82536\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/recipeingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipeingredients",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"description": "",
					"item": [
						{
							"name": "/api/recipeingredients/",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipeingredients/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipeingredients",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/recipeingredients/ Copy",
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/recipeingredients/?pop=true&top=50&skip=0&filter={\"ingredient\":{\"$eq\":\"5af2005152bf1d8be0edd40b\"}}&count=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"recipeingredients",
										""
									],
									"query": [
										{
											"key": "pop",
											"value": "true"
										},
										{
											"key": "top",
											"value": "50"
										},
										{
											"key": "skip",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "{\"ingredient\":{\"$eq\":\"5af2005152bf1d8be0edd40b\"}}"
										},
										{
											"key": "count",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Management",
			"description": "",
			"item": [
				{
					"name": "User",
					"description": "",
					"item": [
						{
							"name": "/management/user/Valid Id",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiMENuN3JwN3B2OU5FOWsyS05aMmg1ZGJiZ1VkNzB5ZnNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZWxtb3NvZnR3YXJlLmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTQwNDE1ODY3LCJleHAiOjE1NDA1MDIyNjcsImF6cCI6IjBDbjdycDdwdjlORTlrMktOWjJoNWRiYmdVZDcweWZzIiwic2NvcGUiOiJyZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.2yKYLWPdmtq5sB5pR7pBiDuuWtdtb38JOVx7b9rSD8Nz8GKtTMVnlYmFx9NDcMNCoPRXyHcL4T5zynMJtGm4CPo_dx2BfR6wnuw3OODZod9WagXusCsAZEyHNMCSxwrsf8CxlrgnYhb2eyWbQ_RxTPhNF09qinc44s-gSQixeTyLTDC7dcOZqJK0bL5fpMLX3W1qajHwYkcN6K5AGutsnDPx94IurDTMTDwbWG0w6AWWbZ7lKQY4pk99poZCO7QMxmHOTmaQp1E4OkiRf4-Cn7YIPRpbj39ktR3mTLoe8q6WyIMFwtXyhnuGME3-pes8J7Xk3CInEaWukE06OzPh7A"
									}
								],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/management/user/auth0|5bad1851654f067ba2541111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"management",
										"user",
										"auth0|5bad1851654f067ba2541111"
									]
								}
							},
							"response": []
						},
						{
							"name": "/management/user/Valid Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_metadata\": {\n    \t\"fullName\": \"Test User 02 UPD2\"\n    }\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/management/user/auth0|5bad1851654f067ba2541111",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"management",
										"user",
										"auth0|5bad1851654f067ba2541111"
									]
								}
							},
							"response": []
						},
						{
							"name": "/management/user/",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5EQXhSVFUyTlVZNU5UUTFSVVpGUkRBNFJEUkRPVUV3TVRreU56UkdOamN4UWpaRFFqSTJOQSJ9.eyJpc3MiOiJodHRwczovL2VsbW9zb2Z0d2FyZS5hdXRoMC5jb20vIiwic3ViIjoiMENuN3JwN3B2OU5FOWsyS05aMmg1ZGJiZ1VkNzB5ZnNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZWxtb3NvZnR3YXJlLmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTQwMjYyMzI4LCJleHAiOjE1NDAzNDg3MjgsImF6cCI6IjBDbjdycDdwdjlORTlrMktOWjJoNWRiYmdVZDcweWZzIiwic2NvcGUiOiJyZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.DVhi4H5unQoDH0WdDobhiivsvGAszrMaC5DS_8KYcwmKpcapZD0gyBdsZq_ICMa4hjbyIeg7l4CnfE0DfkdmFsQ-8HFfTdl9uvmsmqyjk8aE4Y5PncXarU6XKY6b5_34hiwj-AxhxOh4s4oSi9pJDBrxPg6owCcW2GnOPe5_yStKRPrqbXLhfDt6r0s3YXFQZSegmUSnvSJ4-5gnIsAWOtqUvYt798o1T_a-X6D1LCeR4YFIAzypC2nCdpY21AJO7xTEphp4-DtypSaWLj_E4XSOJ4bqrYSi-wkB-WtiG3xcZyJJoj_yJnqsNPqhEvpqnxH8TFA-sdcCKVVJnlF-1w"
									}
								],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/management/user/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"management",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "/management/user/",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {},
								"url": {
									"raw": "http://localhost:3000/api/management/user/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"management",
										"user",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Request access token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"grant_type\": \"client_credentials\",\r\n   \"client_id\": \"0Cn7rp7pv9NE9k2KNZ2h5dbbgUd70yfs\",\r\n   \"client_secret\": \"b7JXQTQa75JdrEQviKb8jpsU4Id_LOOXDKZHLl3ZDywXbxJFs_gHGB0w1q4_36sD\",\r\n   \"audience\": \"https://elmosoftware.auth0.com/api/v2/\"\r\n}"
						},
						"url": {
							"raw": "https://elmosoftware.auth0.com/oauth/token",
							"protocol": "https",
							"host": [
								"elmosoftware",
								"auth0",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "Request an access token for testing purposes."
					},
					"response": []
				}
			]
		},
		{
			"name": "PROD DEPLOYMENT TEST",
			"description": "This is to test a recently deployed endpoint",
			"item": [
				{
					"name": "/api/units/ {No filter}",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Test ING 01\",\r\n\"compatibleUnits\": \r\n        compatibleUnits: [{ type: mongoose.Schema.Types.ObjectId, ref: 'UnitOfMeasure' }]\r\n    }"
						},
						"url": {
							"raw": "https://misrecetas-api.now.sh/api/units/?pub=default",
							"protocol": "https",
							"host": [
								"misrecetas-api",
								"now",
								"sh"
							],
							"path": [
								"api",
								"units",
								""
							],
							"query": [
								{
									"key": "pub",
									"value": "default"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Welcome Page",
			"description": "",
			"item": [
				{
					"name": "Test of welcome page",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:3000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}